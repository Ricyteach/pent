r"""*Supporting test data for* ``pent`` *test suite*.

``pent`` Extracts Numerical Text.

**Author**
    Brian Skinn (bskinn@alum.mit.edu)

**File Created**
    3 Sep 2018

**Copyright**
    \(c) Brian Skinn 2018

**Source Repository**
    http://www.github.com/bskinn/pent

**Documentation**
    http://pent.readthedocs.io

**License**
    The MIT License; see |license_txt|_ for full license terms

**Members**

*(none documented)*

"""

from textwrap import dedent

from pent import Number, Sign


mblock_repeated_result = [
    [
        [["0.2", "0.3", "0.4"], ["0.3", "0.4", "0.6"]],
        [["0.1", "0.1", "0.1"], ["0.5", "0.5", "0.5"]],
    ],
    [
        [["0.2", "0.2", "0.2"], ["0.6", "0.6", "0.6"]],
        [["0.4", "0.4", "0.4"], ["0.8", "0.8", "0.8"]],
    ],
]

mblock_result = [
    [
        [["2.5", "-3.5", "0.8"], ["-1.2", "8.1", "-9.2"]],
        [["-0.1", "3.5", "8.1"], ["1.4", "2.2", "-4.7"]],
    ]
]


# ## OPTIONAL LINE TESTING ##

opt_1line_tail_data = [
    dedent(
        """
            HEAD
            1 2 3
            1. 2. 3.
            FOOT
            4 5 6
            4. 5. 6.
            """
    ),
    dedent(
        """
            HEAD
            1 2 3
            1. 2. 3.
            FOOT
            4 5 6
            4. 5. 6.
            FOOT
            """
    ),
    dedent(
        """
            HEAD
            1 2 3
            1. 2. 3.
            4 5 6
            4. 5. 6.
            """
    ),
    dedent(
        """
            HEAD
            1 2 3
            1. 2. 3.
            FOOT
            4 5 6
            4. 5. 6.
            FOOT
            7 8 9
            7. 8. 9.
            """
    ),
    dedent(
        """
            HEAD
            1 2 3
            1. 2. 3.
            4 5 6
            4. 5. 6.
            FOOT
            7 8 9
            7. 8. 9.
            """
    ),
    dedent(
        """
            HEAD
            1 2 3
            1. 2. 3.
            4 5 6
            4. 5. 6.
            FOOT
            7 8 9
            7. 8. 9.
            1 2 3
            1. 2. 3.
            4 5 6
            4. 5. 6.
            7 8 9
            7. 8. 9.
            """
    ),
]

opt_1line_tail_expect_block = [
    [[[["1.", "2.", "3."]], [["4.", "5.", "6."]]]],
    [[[["1.", "2.", "3."]], [["4.", "5.", "6."]]]],
    [[[["1.", "2.", "3."]], [["4.", "5.", "6."]]]],
    [[[["1.", "2.", "3."]], [["4.", "5.", "6."]], [["7.", "8.", "9."]]]],
    [[[["1.", "2.", "3."]], [["4.", "5.", "6."]], [["7.", "8.", "9."]]]],
    [
        [
            [["1.", "2.", "3."]],
            [["4.", "5.", "6."]],
            [["7.", "8.", "9."]],
            [["1.", "2.", "3."]],
            [["4.", "5.", "6."]],
            [["7.", "8.", "9."]],
        ]
    ],
]


opt_1line_tail_expect_struct = [
    [[["FOOT"]], [[None]]],
    [[["FOOT"]], [["FOOT"]]],
    [[[None]], [[None]]],
    [[["FOOT"]], [["FOOT"]], [[None]]],
    [[[None]], [["FOOT"]], [[None]]],
    [[[None]], [["FOOT"]], [[None]], [[None]], [[None]], [[None]]],
]


# ## RESULTS FROM MeCl2F TRAJECTORY ##

orca_opt_trajectory = [
    [
        ["C", "-3.081564", "2.283942", "0.044943"],
        ["Cl", "-1.303141", "2.255173", "0.064645"],
        ["Cl", "-3.706406", "3.411601", "-1.180577"],
        ["F", "-3.541771", "2.647036", "1.270358"],
        ["H", "-3.439068", "1.277858", "-0.199370"],
    ],
    [
        ["C", "-3.081648", "2.283825", "0.044998"],
        ["Cl", "-1.303549", "2.255447", "0.064410"],
        ["Cl", "-3.705932", "3.411451", "-1.180356"],
        ["F", "-3.541734", "2.647080", "1.270327"],
        ["H", "-3.439088", "1.277807", "-0.199379"],
    ],
    [
        ["C", "-3.081658", "2.283823", "0.045015"],
        ["Cl", "-1.303660", "2.255530", "0.064310"],
        ["Cl", "-3.705773", "3.411404", "-1.180315"],
        ["F", "-3.541755", "2.647054", "1.270344"],
        ["H", "-3.439104", "1.277799", "-0.199355"],
    ],
    [
        ["C", "-3.081652", "2.283830", "0.045009"],
        ["Cl", "-1.303667", "2.255543", "0.064291"],
        ["Cl", "-3.705749", "3.411402", "-1.180318"],
        ["F", "-3.541768", "2.647034", "1.270350"],
        ["H", "-3.439114", "1.277801", "-0.199333"],
    ],
    [
        ["C", "-3.081644", "2.283834", "0.044998"],
        ["Cl", "-1.303664", "2.255550", "0.064283"],
        ["Cl", "-3.705739", "3.411406", "-1.180323"],
        ["F", "-3.541778", "2.647018", "1.270354"],
        ["H", "-3.439125", "1.277801", "-0.199312"],
    ],
    [
        ["C", "-3.081641", "2.283833", "0.044991"],
        ["Cl", "-1.303664", "2.255552", "0.064285"],
        ["Cl", "-3.705739", "3.411409", "-1.180321"],
        ["F", "-3.541778", "2.647016", "1.270352"],
        ["H", "-3.439128", "1.277800", "-0.199306"],
    ],
    [
        ["C", "-3.081640", "2.283831", "0.044988"],
        ["Cl", "-1.303664", "2.255552", "0.064288"],
        ["Cl", "-3.705742", "3.411409", "-1.180319"],
        ["F", "-3.541776", "2.647018", "1.270351"],
        ["H", "-3.439128", "1.277799", "-0.199307"],
    ],
]


# ## RESULTS FROM THE H2O HESS ##

orca_hess_hessian = [
    [
        "0.537066",
        "-0.102740",
        "0.000000",
        "-0.487732",
        "0.020881",
        "-0.000000",
        "-0.049321",
        "0.081869",
        "-0.000000",
    ],
    [
        "-0.102740",
        "0.537067",
        "0.000000",
        "0.081869",
        "-0.049321",
        "-0.000000",
        "0.020881",
        "-0.487732",
        "-0.000001",
    ],
    [
        "0.000000",
        "0.000000",
        "0.002164",
        "0.000000",
        "0.000001",
        "-0.001125",
        "-0.000000",
        "0.000000",
        "-0.001126",
    ],
    [
        "-0.487973",
        "0.081867",
        "0.000001",
        "0.498151",
        "-0.072777",
        "0.000000",
        "-0.010195",
        "-0.009104",
        "0.000000",
    ],
    [
        "0.020954",
        "-0.049388",
        "-0.000000",
        "-0.072790",
        "0.059584",
        "-0.000001",
        "0.051841",
        "-0.010191",
        "0.000000",
    ],
    [
        "0.000000",
        "-0.000000",
        "-0.001200",
        "-0.000000",
        "-0.000000",
        "0.000728",
        "0.000000",
        "0.000000",
        "0.000511",
    ],
    [
        "-0.049388",
        "0.020954",
        "-0.000000",
        "-0.010191",
        "0.051840",
        "-0.000000",
        "0.059584",
        "-0.072790",
        "-0.000000",
    ],
    [
        "0.081867",
        "-0.487973",
        "-0.000000",
        "-0.009106",
        "-0.010195",
        "0.000001",
        "-0.072778",
        "0.498152",
        "-0.000001",
    ],
    [
        "0.000000",
        "-0.000000",
        "-0.001200",
        "0.000000",
        "-0.000000",
        "0.000511",
        "0.000000",
        "-0.000000",
        "0.000728",
    ],
]


# ## RESULTS FROM THE MeCl2F OPT ##

orca_opt_status = [
    [
        ["0.0024289062", "NO"],
        ["0.0065808923", "NO"],
        ["0.0048284586", "NO"],
        ["0.0108762300", "NO"],
    ],
    [
        ["-0.0000653231", "NO"],
        ["0.0005199502", "NO"],
        ["0.0015186205", "NO"],
        ["0.0012185918", "NO"],
        ["0.0032642139", "NO"],
    ],
    [
        ["-0.0000039726", "NO"],
        ["0.0001930565", "NO"],
        ["0.0002722358", "NO"],
        ["0.0008093394", "NO"],
        ["0.0013068540", "NO"],
    ],
    [
        ["-0.0000009297", "YES"],
        ["0.0000709147", "NO"],
        ["0.0000900825", "NO"],
        ["0.0002786532", "YES"],
        ["0.0004283776", "YES"],
    ],
    [
        ["-0.0000000980", "YES"],
        ["0.0000166787", "NO"],
        ["0.0000402499", "NO"],
        ["0.0000461600", "YES"],
        ["0.0000852600", "YES"],
    ],
    [
        ["-0.0000000039", "YES"],
        ["0.0000035084", "NO"],
        ["0.0000054911", "NO"],
        ["0.0000111518", "YES"],
        ["0.0000176674", "YES"],
    ],
    [
        ["-0.0000000003", "YES"],
        ["0.0000007831", "NO"],
        ["0.0000014120", "NO"],
        ["0.0000033697", "YES"],
        ["0.0000063852", "YES"],
    ],
]

orca_opt_status_optline = [
    [
        [
            None,
            None,
            "0.0024289062",
            "NO",
            "0.0065808923",
            "NO",
            "0.0048284586",
            "NO",
            "0.0108762300",
            "NO",
            "0.0058",
            "0.25",
            "0.00",
            "0.00",
        ]
    ],
    [
        [
            "-0.0000653231",
            "NO",
            "0.0005199502",
            "NO",
            "0.0015186205",
            "NO",
            "0.0012185918",
            "NO",
            "0.0032642139",
            "NO",
            "0.0017",
            "0.08",
            "0.00",
            "0.00",
        ]
    ],
    [
        [
            "-0.0000039726",
            "NO",
            "0.0001930565",
            "NO",
            "0.0002722358",
            "NO",
            "0.0008093394",
            "NO",
            "0.0013068540",
            "NO",
            "0.0007",
            "0.06",
            "0.00",
            "0.00",
        ]
    ],
    [
        [
            "-0.0000009297",
            "YES",
            "0.0000709147",
            "NO",
            "0.0000900825",
            "NO",
            "0.0002786532",
            "YES",
            "0.0004283776",
            "YES",
            "0.0002",
            "0.02",
            "0.00",
            "0.00",
        ]
    ],
    [
        [
            "-0.0000000980",
            "YES",
            "0.0000166787",
            "NO",
            "0.0000402499",
            "NO",
            "0.0000461600",
            "YES",
            "0.0000852600",
            "YES",
            "0.0000",
            "0.00",
            "0.00",
            "0.00",
        ]
    ],
    [
        [
            "-0.0000000039",
            "YES",
            "0.0000035084",
            "NO",
            "0.0000054911",
            "NO",
            "0.0000111518",
            "YES",
            "0.0000176674",
            "YES",
            "0.0000",
            "0.00",
            "0.00",
            "0.00",
        ]
    ],
    [
        [
            "-0.0000000003",
            "YES",
            "0.0000007831",
            "NO",
            "0.0000014120",
            "NO",
            "0.0000033697",
            "YES",
            "0.0000063852",
            "YES",
            "0.0000",
            "0.00",
            "0.00",
            "0.00",
        ]
    ],
]


# ## RESULTS FROM THE CU_CAS ##

orca_cas_states = [
    [
        [
            ["0.55109", "7", "1211101"],
            ["0.25785", "13", "1121011"],
            ["0.15330", "0", "2111110"],
            ["0.02415", "6", "1211110"],
            ["0.00449", "35", "1011121"],
            ["0.00303", "29", "1101211"],
        ],
        [
            ["0.93636", "6", "1211110"],
            ["0.02120", "0", "2111110"],
            ["0.01554", "13", "1121011"],
            ["0.01547", "1", "2111101"],
            ["0.00278", "41", "0111121"],
            ["0.00253", "8", "1211011"],
        ],
        [
            ["0.69127", "8", "1211011"],
            ["0.25478", "12", "1121101"],
            ["0.03002", "2", "2111011"],
            ["0.00388", "7", "1211101"],
            ["0.00380", "30", "1101121"],
            ["0.00337", "23", "1111021"],
            ["0.00334", "6", "1211110"],
            ["0.00271", "11", "1121110"],
        ],
        [
            ["0.65472", "0", "2111110"],
            ["0.15679", "11", "1121110"],
            ["0.07698", "7", "1211101"],
            ["0.04636", "13", "1121011"],
            ["0.04407", "1", "2111101"],
            ["0.00506", "21", "1111111"],
            ["0.00335", "2", "2111011"],
            ["0.00321", "42", "0111112"],
            ["0.00259", "12", "1121101"],
        ],
    ],
    [
        [
            ["0.48295", "68", "1221001"],
            ["0.32173", "0", "2211100"],
            ["0.15917", "11", "2121010"],
            ["0.01379", "67", "1221010"],
            ["0.00650", "126", "1111111"],
            ["0.00278", "92", "1201201"],
            ["0.00259", "160", "1021021"],
        ],
        [
            ["0.88192", "66", "1221100"],
            ["0.05916", "1", "2211010"],
            ["0.03329", "2", "2211001"],
            ["0.00418", "10", "2121100"],
            ["0.00388", "157", "1021120"],
            ["0.00339", "123", "1111210"],
            ["0.00274", "214", "0121111"],
        ],
        [
            ["0.76084", "67", "1221010"],
            ["0.09245", "0", "2211100"],
            ["0.05911", "68", "1221001"],
            ["0.05725", "11", "2121010"],
            ["0.00500", "1", "2211010"],
            ["0.00351", "12", "2121001"],
            ["0.00349", "91", "1201210"],
            ["0.00306", "125", "1111120"],
        ],
        [
            ["0.40671", "68", "1221001"],
            ["0.30328", "0", "2211100"],
            ["0.17898", "67", "1221010"],
            ["0.04452", "11", "2121010"],
            ["0.03751", "12", "2121001"],
            ["0.00669", "1", "2211010"],
            ["0.00514", "126", "1111111"],
        ],
    ],
    [
        [
            ["0.97008", "0", "2221000"],
            ["0.00613", "44", "2111110"],
            ["0.00492", "141", "1211101"],
            ["0.00457", "178", "1121011"],
            ["0.00402", "17", "2201200"],
            ["0.00393", "275", "0221002"],
            ["0.00384", "81", "2021020"],
        ],
        [
            ["0.93374", "126", "1222000"],
            ["0.02074", "269", "0222001"],
            ["0.00812", "136", "1212100"],
            ["0.00717", "172", "1122010"],
            ["0.00574", "30", "2122000"],
            ["0.00543", "188", "1112110"],
            ["0.00396", "129", "1221001"],
            ["0.00380", "152", "1202200"],
            ["0.00341", "225", "1022020"],
        ],
        [
            ["0.94890", "4", "2212000"],
            ["0.02277", "138", "1212001"],
            ["0.00489", "41", "2112010"],
            ["0.00356", "94", "2012020"],
            ["0.00334", "191", "1112011"],
            ["0.00291", "57", "2102110"],
            ["0.00284", "14", "2202100"],
        ],
        [
            ["0.93053", "30", "2122000"],
            ["0.02488", "173", "1122001"],
            ["0.00873", "76", "2022010"],
            ["0.00721", "126", "1222000"],
            ["0.00399", "56", "2102200"],
            ["0.00380", "189", "1112101"],
            ["0.00332", "40", "2112100"],
            ["0.00266", "92", "2012110"],
        ],
    ],
]


# ## RESULTS FROM THE C2F4_01.hess FILE ##

orca_hess_dipders = [
    [
        ["-1.041194", "0.077425", "-0.236446"],
        ["0.021347", "-0.053665", "0.064080"],
        ["-0.064917", "0.064030", "-0.228121"],
        ["1.334075", "0.025554", "-0.077999"],
        ["0.025455", "0.179824", "-0.349540"],
        ["-0.078013", "-0.349384", "1.132034"],
        ["-0.292885", "-0.102966", "0.314406"],
        ["-0.046806", "-0.126137", "0.285463"],
        ["0.142946", "0.285361", "-0.903922"],
        ["1.334072", "0.025555", "-0.078001"],
        ["0.025456", "0.179823", "-0.349540"],
        ["-0.078015", "-0.349384", "1.132038"],
        ["-1.041194", "0.077424", "-0.236443"],
        ["0.021345", "-0.053666", "0.064079"],
        ["-0.064912", "0.064030", "-0.228121"],
        ["-0.292884", "-0.102965", "0.314403"],
        ["-0.046806", "-0.126136", "0.285464"],
        ["0.142945", "0.285362", "-0.903926"],
    ]
]


orca_hess_freqs = [
    [
        ["0.000000"],
        ["0.000000"],
        ["0.000000"],
        ["0.000000"],
        ["0.000000"],
        ["0.000000"],
        ["194.490162"],
        ["198.587114"],
        ["389.931897"],
        ["402.713910"],
        ["538.244274"],
        ["542.017838"],
        ["548.246738"],
        ["800.613516"],
        ["1203.096114"],
        ["1342.200360"],
        ["1349.543713"],
        ["1885.157022"],
    ]
]


# ## RESULTS FROM MWFN SAMPLE DATA ##

mwfn_basin_dens_data = [
    [
        ["2.2125360790", "1265.27900000"],
        ["2.2125249536", "1265.32400000"],
        ["1.8610792139", "658.34400000"],
        ["17.0663227928", "6.85900000"],
        ["9.4098256727", "0.10500000"],
        ["1.8610687911", "671.02900000"],
    ]
]

mwfn_attractor_data = [
    [
        ["-1.24356654", "-0.79208182", "-0.02645886", "0.94556012"],
        ["1.24356654", "-0.79208182", "-0.02645886", "0.94556010"],
        ["-0.02645886", "0.68961448", "-1.08481336", "0.99986145"],
        ["0.00256054", "-0.36191193", "-0.00256054", "0.77847124"],
        ["0.02645886", "-0.42165775", "0.02645886", "0.79285953"],
        ["-0.02645886", "0.68961448", "1.08481336", "0.99986145"],
    ]
]

mwfn_li_data = [
    "1.359",
    "1.345",
    "1.353",
    "1.238",
    "1.456",
    "2.824",
    "1.090",
    "0.673",
    "1.076",
    "1.413",
    "1.085",
    "0.893",
    "1.329",
    "0.840",
    "0.705",
    "1.892",
    "0.822",
    "1.866",
    "1.824",
    "2.443",
    "1.840",
    "1.657",
    "0.851",
    "1.390",
    "0.685",
    "1.346",
    "1.853",
    "1.354",
    "1.737",
]

mwfn_di_data = [
    [
        "1.36178773",
        "0.05044842",
        "0.05371810",
        "0.00291944",
        "0.00560276",
        "0.00251008",
        "0.01950151",
        "0.00145495",
        "0.00195998",
        "0.00220955",
        "0.00637166",
        "0.00092037",
        "0.39274865",
        "0.29038159",
        "0.01196945",
        "0.00030254",
        "0.29430087",
        "0.00807528",
        "0.00055525",
        "0.00020954",
        "0.14219606",
        "0.00083150",
        "0.02066945",
        "0.00796330",
        "0.00366331",
        "0.02614284",
        "0.00760501",
        "0.00550411",
        "0.00105215",
    ],
    [
        "0.05044842",
        "1.36091642",
        "0.00287962",
        "0.01424707",
        "0.00112868",
        "0.00117213",
        "0.00218662",
        "0.00028548",
        "0.00053297",
        "0.00064329",
        "0.00860372",
        "0.00103220",
        "0.03300867",
        "0.01880047",
        "0.00455278",
        "0.00008383",
        "0.29135870",
        "0.00039512",
        "0.00009224",
        "0.00008799",
        "0.00749990",
        "0.00100365",
        "0.29301903",
        "0.04378607",
        "0.01624389",
        "0.38511956",
        "0.13918323",
        "0.03656412",
        "0.00695696",
    ],
    [
        "0.05371810",
        "0.00287962",
        "1.40140674",
        "0.05684884",
        "0.02002712",
        "0.02021563",
        "0.34853981",
        "0.01210442",
        "0.02320109",
        "0.01466332",
        "0.04747118",
        "0.00559413",
        "0.02620698",
        "0.29930602",
        "0.23955189",
        "0.00190197",
        "0.01622909",
        "0.14530978",
        "0.00725787",
        "0.00142185",
        "0.00717530",
        "0.00840232",
        "0.00480654",
        "0.00759922",
        "0.01854414",
        "0.00570461",
        "0.00060734",
        "0.00499131",
        "0.00112725",
    ],
    [
        "0.00291944",
        "0.01424707",
        "0.05684884",
        "1.65033273",
        "0.00271237",
        "0.00860276",
        "0.02246858",
        "0.00221247",
        "0.00234818",
        "0.00294522",
        "0.55684776",
        "0.01879472",
        "0.00359734",
        "0.02177953",
        "0.31949574",
        "0.00039990",
        "0.00639537",
        "0.00836526",
        "0.00088543",
        "0.00098642",
        "0.00060873",
        "0.15386971",
        "0.02600255",
        "0.04754347",
        "0.31758124",
        "0.00682664",
        "0.00089306",
        "0.03600712",
        "0.00814782",
    ],
    [
        "0.00560276",
        "0.00112868",
        "0.02002712",
        "0.00271237",
        "2.41802282",
        "0.06647768",
        "0.11837609",
        "0.04867404",
        "0.80208036",
        "0.97721528",
        "0.00335686",
        "0.01430991",
        "0.03126763",
        "0.01396851",
        "0.00536297",
        "0.25613987",
        "0.00297350",
        "0.00248713",
        "0.03578397",
        "0.00487697",
        "0.00093899",
        "0.00047458",
        "0.00057308",
        "0.00078268",
        "0.00086405",
        "0.00057212",
        "0.00018279",
        "0.00075324",
        "0.00005959",
    ],
    [
        "0.00251008",
        "0.00117213",
        "0.02021563",
        "0.00860276",
        "0.06647768",
        "3.04204811",
        "0.14123139",
        "0.98218434",
        "0.11689078",
        "0.07996353",
        "0.04213066",
        "1.04455072",
        "0.00304558",
        "0.01040757",
        "0.00956490",
        "0.00907282",
        "0.00159180",
        "0.00280914",
        "0.03934542",
        "0.43664439",
        "0.00052729",
        "0.00218781",
        "0.00152587",
        "0.00158725",
        "0.00446183",
        "0.00135271",
        "0.00012602",
        "0.01154724",
        "0.00032076",
    ],
    [
        "0.01950151",
        "0.00218662",
        "0.34853981",
        "0.02246858",
        "0.11837609",
        "0.14123139",
        "2.19235291",
        "0.22053935",
        "0.29364959",
        "0.08896326",
        "0.05725855",
        "0.04578658",
        "0.04273726",
        "0.26065490",
        "0.19746182",
        "0.01249066",
        "0.01277607",
        "0.12288932",
        "0.13209284",
        "0.00943247",
        "0.00583753",
        "0.00625815",
        "0.00313546",
        "0.00438599",
        "0.01223171",
        "0.00338930",
        "0.00043625",
        "0.00714817",
        "0.00049368",
    ],
    [
        "0.00145495",
        "0.00028548",
        "0.01210442",
        "0.00221247",
        "0.04867404",
        "0.98218434",
        "0.22053935",
        "2.04936539",
        "0.19861551",
        "0.06388853",
        "0.01089503",
        "0.26759198",
        "0.00230330",
        "0.00731635",
        "0.00738842",
        "0.00704275",
        "0.00069223",
        "0.00351134",
        "0.09707234",
        "0.11085507",
        "0.00022924",
        "0.00053912",
        "0.00027440",
        "0.00031558",
        "0.00107852",
        "0.00036320",
        "0.00003719",
        "0.00185037",
        "0.00004987",
    ],
    [
        "0.00195998",
        "0.00053297",
        "0.02320109",
        "0.00234818",
        "0.80208036",
        "0.11689078",
        "0.29364959",
        "0.19861551",
        "2.62903162",
        "0.79583895",
        "0.00357934",
        "0.01998730",
        "0.01382293",
        "0.01423953",
        "0.00607657",
        "0.16517097",
        "0.00125941",
        "0.00438194",
        "0.15487269",
        "0.00642885",
        "0.00049439",
        "0.00039635",
        "0.00030239",
        "0.00044001",
        "0.00086449",
        "0.00037874",
        "0.00006992",
        "0.00109884",
        "0.00004954",
    ],
    [
        "0.00220955",
        "0.00064329",
        "0.01466332",
        "0.00294522",
        "0.97721528",
        "0.07996353",
        "0.08896326",
        "0.06388853",
        "0.79583895",
        "2.36689193",
        "0.00318152",
        "0.01540601",
        "0.00980168",
        "0.00802348",
        "0.00517116",
        "0.25256376",
        "0.00121447",
        "0.00209792",
        "0.03425802",
        "0.00510588",
        "0.00044452",
        "0.00043999",
        "0.00036359",
        "0.00063426",
        "0.00076544",
        "0.00027037",
        "0.00007906",
        "0.00068895",
        "0.00005092",
    ],
    [
        "0.00637166",
        "0.00860372",
        "0.04747118",
        "0.55684776",
        "0.00335686",
        "0.04213066",
        "0.05725855",
        "0.01089503",
        "0.00357934",
        "0.00318152",
        "2.12705978",
        "0.16166012",
        "0.00516423",
        "0.02771831",
        "0.40346969",
        "0.00045435",
        "0.00705738",
        "0.01186195",
        "0.00176144",
        "0.00403894",
        "0.00109684",
        "0.18796615",
        "0.02959851",
        "0.05157023",
        "0.39668318",
        "0.01034043",
        "0.00141453",
        "0.07322575",
        "0.01228145",
    ],
    [
        "0.00092037",
        "0.00103220",
        "0.00559413",
        "0.01879472",
        "0.01430991",
        "1.04455072",
        "0.04578658",
        "0.26759198",
        "0.01998730",
        "0.01540601",
        "0.16166012",
        "1.79911753",
        "0.00083910",
        "0.00352309",
        "0.01775047",
        "0.00220196",
        "0.00078063",
        "0.00121880",
        "0.00785617",
        "0.14201443",
        "0.00016535",
        "0.00607153",
        "0.00198660",
        "0.00120181",
        "0.01061433",
        "0.00121911",
        "0.00016218",
        "0.00562414",
        "0.00025379",
    ],
    [
        "0.39274865",
        "0.03300867",
        "0.02620698",
        "0.00359734",
        "0.03126763",
        "0.00304558",
        "0.04273726",
        "0.00230330",
        "0.01382293",
        "0.00980168",
        "0.00516423",
        "0.00083910",
        "1.40499449",
        "0.28974308",
        "0.01128194",
        "0.00140025",
        "0.29136206",
        "0.00751311",
        "0.00143985",
        "0.00021297",
        "0.14188940",
        "0.00071069",
        "0.01925182",
        "0.00497992",
        "0.00323096",
        "0.04870252",
        "0.00737689",
        "0.01078372",
        "0.00057195",
    ],
    [
        "0.29038159",
        "0.01880047",
        "0.29930602",
        "0.02177953",
        "0.01396851",
        "0.01040757",
        "0.26065490",
        "0.00731635",
        "0.01423953",
        "0.00802348",
        "0.02771831",
        "0.00352309",
        "0.28974308",
        "1.99765408",
        "0.18574973",
        "0.00111811",
        "0.23141954",
        "0.11064732",
        "0.00482743",
        "0.00085930",
        "0.10286780",
        "0.00565892",
        "0.02534801",
        "0.00669854",
        "0.02284611",
        "0.02015566",
        "0.00531777",
        "0.00712525",
        "0.00115217",
    ],
    [
        "0.01196945",
        "0.00455278",
        "0.23955189",
        "0.31949574",
        "0.00536297",
        "0.00956490",
        "0.19746182",
        "0.00738842",
        "0.00607657",
        "0.00517116",
        "0.40346969",
        "0.01775047",
        "0.01128194",
        "0.18574973",
        "1.94512012",
        "0.00074331",
        "0.01840078",
        "0.08743223",
        "0.00305575",
        "0.00097505",
        "0.00356159",
        "0.10751574",
        "0.02242485",
        "0.02085109",
        "0.22637905",
        "0.00542869",
        "0.00100460",
        "0.01786425",
        "0.00463558",
    ],
    [
        "0.00030254",
        "0.00008383",
        "0.00190197",
        "0.00039990",
        "0.25613987",
        "0.00907282",
        "0.01249066",
        "0.00704275",
        "0.16517097",
        "0.25256376",
        "0.00045435",
        "0.00220196",
        "0.00140025",
        "0.00111811",
        "0.00074331",
        "0.71862120",
        "0.00017140",
        "0.00032317",
        "0.00585981",
        "0.00067622",
        "0.00005788",
        "0.00006562",
        "0.00004660",
        "0.00008753",
        "0.00011002",
        "0.00002998",
        "0.00001096",
        "0.00008804",
        "0.00000693",
    ],
    [
        "0.29430087",
        "0.29135870",
        "0.01622909",
        "0.00639537",
        "0.00297350",
        "0.00159180",
        "0.01277607",
        "0.00069223",
        "0.00125941",
        "0.00121447",
        "0.00705738",
        "0.00078063",
        "0.29136206",
        "0.23141954",
        "0.01840078",
        "0.00017140",
        "1.99920939",
        "0.00513350",
        "0.00030319",
        "0.00012263",
        "0.10851559",
        "0.00152644",
        "0.23531397",
        "0.02146696",
        "0.01762592",
        "0.29501154",
        "0.10804679",
        "0.02327256",
        "0.00488700",
    ],
    [
        "0.00807528",
        "0.00039512",
        "0.14530978",
        "0.00836526",
        "0.00248713",
        "0.00280914",
        "0.12288932",
        "0.00351134",
        "0.00438194",
        "0.00209792",
        "0.01186195",
        "0.00121880",
        "0.00751311",
        "0.11064732",
        "0.08743223",
        "0.00032317",
        "0.00513350",
        "0.54202186",
        "0.00272864",
        "0.00030333",
        "0.00284518",
        "0.00276442",
        "0.00124334",
        "0.00147563",
        "0.00428560",
        "0.00117934",
        "0.00009960",
        "0.00052148",
        "0.00012300",
    ],
    [
        "0.00055525",
        "0.00009224",
        "0.00725787",
        "0.00088543",
        "0.03578397",
        "0.03934542",
        "0.13209284",
        "0.09707234",
        "0.15487269",
        "0.03425802",
        "0.00176144",
        "0.00785617",
        "0.00143985",
        "0.00482743",
        "0.00305575",
        "0.00585981",
        "0.00030319",
        "0.00272864",
        "0.53422677",
        "0.00330547",
        "0.00008899",
        "0.00012872",
        "0.00005740",
        "0.00008126",
        "0.00024093",
        "0.00009820",
        "0.00001696",
        "0.00015292",
        "0.00000755",
    ],
    [
        "0.00020954",
        "0.00008799",
        "0.00142185",
        "0.00098642",
        "0.00487697",
        "0.43664439",
        "0.00943247",
        "0.11085507",
        "0.00642885",
        "0.00510588",
        "0.00403894",
        "0.14201443",
        "0.00021297",
        "0.00085930",
        "0.00097505",
        "0.00067622",
        "0.00012263",
        "0.00030333",
        "0.00330547",
        "0.73009312",
        "0.00003485",
        "0.00026816",
        "0.00011887",
        "0.00008546",
        "0.00045113",
        "0.00011904",
        "0.00001006",
        "0.00043333",
        "0.00001443",
    ],
    [
        "0.14219606",
        "0.00749990",
        "0.00717530",
        "0.00060873",
        "0.00093899",
        "0.00052729",
        "0.00583753",
        "0.00022924",
        "0.00049439",
        "0.00044452",
        "0.00109684",
        "0.00016535",
        "0.14188940",
        "0.10286780",
        "0.00356159",
        "0.00005788",
        "0.10851559",
        "0.00284518",
        "0.00008899",
        "0.00003485",
        "0.54601741",
        "0.00016387",
        "0.00522055",
        "0.00132237",
        "0.00103534",
        "0.00756558",
        "0.00283991",
        "0.00069911",
        "0.00009525",
    ],
    [
        "0.00083150",
        "0.00100365",
        "0.00840232",
        "0.15386971",
        "0.00047458",
        "0.00218781",
        "0.00625815",
        "0.00053912",
        "0.00039635",
        "0.00043999",
        "0.18796615",
        "0.00607153",
        "0.00071069",
        "0.00565892",
        "0.10751574",
        "0.00006562",
        "0.00152644",
        "0.00276442",
        "0.00012872",
        "0.00026816",
        "0.00016387",
        "0.61910132",
        "0.00632574",
        "0.00834958",
        "0.10457472",
        "0.00174941",
        "0.00018489",
        "0.00780574",
        "0.00286780",
    ],
    [
        "0.02066945",
        "0.29301903",
        "0.00480654",
        "0.02600255",
        "0.00057308",
        "0.00152587",
        "0.00313546",
        "0.00027440",
        "0.00030239",
        "0.00036359",
        "0.02959851",
        "0.00198660",
        "0.01925182",
        "0.02534801",
        "0.02242485",
        "0.00004660",
        "0.23531397",
        "0.00124334",
        "0.00005740",
        "0.00011887",
        "0.00522055",
        "0.00632574",
        "2.00226600",
        "0.30038820",
        "0.18882372",
        "0.29347979",
        "0.10845196",
        "0.29836954",
        "0.11514417",
    ],
    [
        "0.00796330",
        "0.04378607",
        "0.00759922",
        "0.04754347",
        "0.00078268",
        "0.00158725",
        "0.00438599",
        "0.00031558",
        "0.00044001",
        "0.00063426",
        "0.05157023",
        "0.00120181",
        "0.00497992",
        "0.00669854",
        "0.02085109",
        "0.00008753",
        "0.02146696",
        "0.00147563",
        "0.00008126",
        "0.00008546",
        "0.00132237",
        "0.00834958",
        "0.30038820",
        "1.33111132",
        "0.23227358",
        "0.02737725",
        "0.00774801",
        "0.38634839",
        "0.14376770",
    ],
    [
        "0.00366331",
        "0.01624389",
        "0.01854414",
        "0.31758124",
        "0.00086405",
        "0.00446183",
        "0.01223171",
        "0.00107852",
        "0.00086449",
        "0.00076544",
        "0.39668318",
        "0.01061433",
        "0.00323096",
        "0.02284611",
        "0.22637905",
        "0.00011002",
        "0.01762592",
        "0.00428560",
        "0.00024093",
        "0.00045113",
        "0.00103534",
        "0.10457472",
        "0.18882372",
        "0.23227358",
        "1.90203047",
        "0.01486248",
        "0.00363307",
        "0.21705577",
        "0.08100595",
    ],
    [
        "0.02614284",
        "0.38511956",
        "0.00570461",
        "0.00682664",
        "0.00057212",
        "0.00135271",
        "0.00338930",
        "0.00036320",
        "0.00037874",
        "0.00027037",
        "0.01034043",
        "0.00121911",
        "0.04870252",
        "0.02015566",
        "0.00542869",
        "0.00002998",
        "0.29501154",
        "0.00117934",
        "0.00009820",
        "0.00011904",
        "0.00756558",
        "0.00174941",
        "0.29347979",
        "0.02737725",
        "0.01486248",
        "1.35010292",
        "0.14344510",
        "0.04225439",
        "0.00696434",
    ],
    [
        "0.00760501",
        "0.13918323",
        "0.00060734",
        "0.00089306",
        "0.00018279",
        "0.00012602",
        "0.00043625",
        "0.00003719",
        "0.00006992",
        "0.00007906",
        "0.00141453",
        "0.00016218",
        "0.00737689",
        "0.00531777",
        "0.00100460",
        "0.00001096",
        "0.10804679",
        "0.00009960",
        "0.00001696",
        "0.00001006",
        "0.00283991",
        "0.00018489",
        "0.10845196",
        "0.00774801",
        "0.00363307",
        "0.14344510",
        "0.54922567",
        "0.00757703",
        "0.00266550",
    ],
    [
        "0.00550411",
        "0.03656412",
        "0.00499131",
        "0.03600712",
        "0.00075324",
        "0.01154724",
        "0.00714817",
        "0.00185037",
        "0.00109884",
        "0.00068895",
        "0.07322575",
        "0.00562414",
        "0.01078372",
        "0.00712525",
        "0.01786425",
        "0.00008804",
        "0.02327256",
        "0.00052148",
        "0.00015292",
        "0.00043333",
        "0.00069911",
        "0.00780574",
        "0.29836954",
        "0.38634839",
        "0.21705577",
        "0.04225439",
        "0.00757703",
        "1.34140735",
        "0.13605249",
    ],
    [
        "0.00105215",
        "0.00695696",
        "0.00112725",
        "0.00814782",
        "0.00005959",
        "0.00032076",
        "0.00049368",
        "0.00004987",
        "0.00004954",
        "0.00005092",
        "0.01228145",
        "0.00025379",
        "0.00057195",
        "0.00115217",
        "0.00463558",
        "0.00000693",
        "0.00488700",
        "0.00012300",
        "0.00000755",
        "0.00001443",
        "0.00009525",
        "0.00286780",
        "0.11514417",
        "0.14376770",
        "0.08100595",
        "0.00696434",
        "0.00266550",
        "0.13605249",
        "0.53080559",
    ],
]


# ## SAMPLE NUMBERS AND MATCHING TOKENS ##

number_token_template = "#{{0}}{{1}}{{2}}{0}"

number_patterns = {
    "123": number_token_template.format(".i"),
    "-123": number_token_template.format("-i"),
    "+123": number_token_template.format("+i"),
    "0.2": number_token_template.format(".f"),
    "-.285": number_token_template.format("-f"),
    "+315.": number_token_template.format("+f"),
    "3e5": number_token_template.format(".s"),
    "-.13e+5": number_token_template.format("-s"),
    "+3.1e-5": number_token_template.format("+s"),
    ".266": number_token_template.format(".d"),
    "-15.285": number_token_template.format("-d"),
    "+315.185": number_token_template.format("+d"),
    "35": number_token_template.format(".g"),
    "-.13": number_token_template.format("-g"),
    "+3.1e+15": number_token_template.format("+g"),
}

assert len(number_patterns) == 15


# ## EXHAUSTIVE MATCHES OF NUMBERS TO NUMBER/SIGN TYPES ##

number_sign_vals = {
    "0": {
        (Number.Integer, Sign.Positive): True,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): True,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): False,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): False,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "-0": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): True,
        (Number.Integer, Sign.Any): True,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): False,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): False,
        (Number.General, Sign.Positive): False,
        (Number.General, Sign.Negative): True,
        (Number.General, Sign.Any): True,
    },
    "+0.": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): True,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): True,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "-.00": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): True,
        (Number.Float, Sign.Any): True,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): False,
        (Number.Decimal, Sign.Negative): True,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): False,
        (Number.General, Sign.Negative): True,
        (Number.General, Sign.Any): True,
    },
    "+35": {
        (Number.Integer, Sign.Positive): True,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): True,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): False,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): False,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "23": {
        (Number.Integer, Sign.Positive): True,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): True,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): False,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): False,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "-12": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): True,
        (Number.Integer, Sign.Any): True,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): False,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): False,
        (Number.General, Sign.Positive): False,
        (Number.General, Sign.Negative): True,
        (Number.General, Sign.Any): True,
    },
    ".12": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): True,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): True,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "35.": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): True,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): True,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "+218.": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): True,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): True,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "+.355": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): True,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): True,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "0.23": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): True,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): True,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "-.22": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): True,
        (Number.Float, Sign.Any): True,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): False,
        (Number.Decimal, Sign.Negative): True,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): False,
        (Number.General, Sign.Negative): True,
        (Number.General, Sign.Any): True,
    },
    "-234.": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): True,
        (Number.Float, Sign.Any): True,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): False,
        (Number.Decimal, Sign.Negative): True,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): False,
        (Number.General, Sign.Negative): True,
        (Number.General, Sign.Any): True,
    },
    "-392.34": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): True,
        (Number.Float, Sign.Any): True,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): False,
        (Number.Decimal, Sign.Negative): True,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): False,
        (Number.General, Sign.Negative): True,
        (Number.General, Sign.Any): True,
    },
    "+3e3": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): True,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): True,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "+3e+3": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): True,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): True,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "+3e+003": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): True,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): True,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "3e+003": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): True,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): True,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "+3.e5": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): True,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): True,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "+2e-04": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): True,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): True,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "+.34e23": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): True,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): True,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "+.48e-2": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): True,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): True,
        (Number.Decimal, Sign.Positive): True,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): True,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): True,
    },
    "-2e-04": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): True,
        (Number.SciNot, Sign.Any): True,
        (Number.Decimal, Sign.Positive): False,
        (Number.Decimal, Sign.Negative): True,
        (Number.Decimal, Sign.Any): True,
        (Number.General, Sign.Positive): False,
        (Number.General, Sign.Negative): True,
        (Number.General, Sign.Any): True,
    },
    "+-0.39": {
        (Number.Integer, Sign.Positive): False,
        (Number.Integer, Sign.Negative): False,
        (Number.Integer, Sign.Any): False,
        (Number.Float, Sign.Positive): False,
        (Number.Float, Sign.Negative): False,
        (Number.Float, Sign.Any): False,
        (Number.SciNot, Sign.Positive): False,
        (Number.SciNot, Sign.Negative): False,
        (Number.SciNot, Sign.Any): False,
        (Number.Decimal, Sign.Positive): False,
        (Number.Decimal, Sign.Negative): False,
        (Number.Decimal, Sign.Any): False,
        (Number.General, Sign.Positive): False,
        (Number.General, Sign.Negative): False,
        (Number.General, Sign.Any): False,
    },
    # INVALID VALUES... complex(?), etc.
}
